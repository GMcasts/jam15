<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-7000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_alpha(0.95);
draw_set_color(c_black);

for(i=0;i&lt;=room_width;i+=32) {
    for(j=0;j&lt;=room_height;j+=32) {
        if(!instance_position(i,j,obj_player) &amp;&amp;
            //right x3
            !instance_position(i+32,j,obj_player) &amp;&amp;
            !instance_position(i+64,j,obj_player) &amp;&amp;
            !instance_position(i+96,j,obj_player) &amp;&amp;
            // 3x right +y
            !instance_position(i+32,j+32,obj_player) &amp;&amp;
            !instance_position(i+64,j+32,obj_player) &amp;&amp;
            !instance_position(i+96,j+32,obj_player) &amp;&amp;
            !instance_position(i+32,j+64,obj_player) &amp;&amp;
            !instance_position(i+64,j+64,obj_player) &amp;&amp;
            !instance_position(i+96,j+64,obj_player) &amp;&amp;
            !instance_position(i+32,j+96,obj_player) &amp;&amp;
            !instance_position(i+64,j+96,obj_player) &amp;&amp;
            !instance_position(i+96,j+96,obj_player) &amp;&amp;
            //left x3
            !instance_position(i-32,j,obj_player) &amp;&amp;
            !instance_position(i-64,j,obj_player) &amp;&amp;
            !instance_position(i-96,j,obj_player) &amp;&amp;
            // 3x up
            !instance_position(i-32,j+32,obj_player) &amp;&amp;
            !instance_position(i-64,j+32,obj_player) &amp;&amp;
            !instance_position(i-96,j+32,obj_player) &amp;&amp;
            !instance_position(i-32,j+64,obj_player) &amp;&amp;
            !instance_position(i-64,j+64,obj_player) &amp;&amp;
            !instance_position(i-96,j+64,obj_player) &amp;&amp;
            !instance_position(i-32,j+96,obj_player) &amp;&amp;
            !instance_position(i-64,j+96,obj_player) &amp;&amp;
            !instance_position(i-96,j+96,obj_player) &amp;&amp;

            // up x3            
            !instance_position(i,j+32,obj_player) &amp;&amp;
            !instance_position(i,j+64,obj_player) &amp;&amp;
            !instance_position(i,j+96,obj_player) &amp;&amp;
            //3x
            !instance_position(i+32,j+32,obj_player) &amp;&amp;
            !instance_position(i+32,j+64,obj_player) &amp;&amp;
            !instance_position(i+32,j+96,obj_player) &amp;&amp;
            !instance_position(i+64,j+32,obj_player) &amp;&amp;
            !instance_position(i+64,j+64,obj_player) &amp;&amp;
            !instance_position(i+64,j+96,obj_player) &amp;&amp;
            !instance_position(i+96,j+32,obj_player) &amp;&amp;
            !instance_position(i+96,j+64,obj_player) &amp;&amp;
            !instance_position(i+96,j+96,obj_player) &amp;&amp;
            
            //down x3
            !instance_position(i,j-32,obj_player) &amp;&amp;
            !instance_position(i,j-64,obj_player) &amp;&amp;
            !instance_position(i,j-96,obj_player) &amp;&amp;
            //3x
            !instance_position(i+32,j-32,obj_player) &amp;&amp;
            !instance_position(i+32,j-64,obj_player) &amp;&amp;
            !instance_position(i+32,j-96,obj_player) &amp;&amp;
            !instance_position(i+64,j-32,obj_player) &amp;&amp;
            !instance_position(i+64,j-64,obj_player) &amp;&amp;
            !instance_position(i+64,j-96,obj_player) &amp;&amp;
            !instance_position(i+96,j-32,obj_player) &amp;&amp;
            !instance_position(i+96,j-64,obj_player) &amp;&amp;
            !instance_position(i+96,j-96,obj_player) &amp;&amp;
            //3x
            !instance_position(i-32,j-32,obj_player) &amp;&amp;
            !instance_position(i-32,j-64,obj_player) &amp;&amp;
            !instance_position(i-32,j-96,obj_player) &amp;&amp;
            !instance_position(i-64,j-32,obj_player) &amp;&amp;
            !instance_position(i-64,j-64,obj_player) &amp;&amp;
            !instance_position(i-64,j-96,obj_player) &amp;&amp;
            !instance_position(i-96,j-32,obj_player) &amp;&amp;
            !instance_position(i-96,j-64,obj_player) &amp;&amp;
            !instance_position(i-96,j-96,obj_player)
            ){
            draw_rectangle(i, j, i + 32, j + 32, false);
        }else{
            wall_blocked = false;
            // handle light to the right
            if(i &lt; obj_player.x){
                
                x_diff = abs(obj_player.x-i);
                for(q=0;q&lt;=x_diff;q+=32){
                    if(instance_position(i+q,j,obj_wall)){
                        wall_blocked = true;
                    }
                }
            }else if(i &gt; obj_player.x) {
                if(j == obj_player.y) {
                    x_diff = abs(obj_player.x-i);
                    for(q=0;q&lt;=x_diff;q+=32){
                        if(instance_position(i+(q*-1),j,obj_wall)){
                            wall_blocked = true;
                        }
                    }
                }
            }
                   
            if(wall_blocked==false) {
                draw_set_alpha(0.5);
                draw_rectangle(i, j, i + 32, j + 32, false);  
                draw_set_alpha(0.95);     
            }else{
                draw_rectangle(i, j, i + 32, j + 32, false);
            }     
        }
    }
}
draw_set_alpha(1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
