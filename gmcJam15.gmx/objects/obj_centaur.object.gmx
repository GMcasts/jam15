<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_centaur</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-300</depth>
  <persistent>0</persistent>
  <parentName>obj_player</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_movement=false;draw_attack=false;
instance_create(x,y,obj_cursor);
VERTICAL_MOVE = 4;
HORIZONTAL_MOVE = 6;
valid_moves = ds_map_create();
valid_attacks = ds_map_create();
move_toX = 0;move_toY = 0;

inventory = ds_list_create();
inventoryNames = ds_map_create();

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// move towards point controller
if(move_toX != x || move_toY != y){
    move_towards(move_toX, move_toY);
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//if(keyboard_check_pressed(vk_enter)) {
if(mouse_check_button_pressed(mb_left)) {
    if( (draw_movement || draw_attack) ) {
        y_cell_diff = (obj_cursor.y - y) / 32;
        x_cell_diff = (obj_cursor.x - x) / 32;
        //handle_vertical_cursor(y_cell_diff);
        //handle_horizontal_cursor(x_cell_diff);
        handle_move(x_cell_diff,y_cell_diff);
        handle_attack(x_cell_diff, y_cell_diff);
    }else {
        // do stuff when we click on the inventory
        if(obj_cursor.x &gt;= 384 &amp;&amp; obj_cursor.x &lt;= 576 &amp;&amp; obj_cursor.y &gt;= 0 &amp;&amp; obj_cursor.y &lt;= 32) {
            h = floor((obj_cursor.x - 384) /32)
            v = floor((obj_cursor.y - 0) /32);
            obj = ds_list_find_value(inventory, h+5*v);
            if(obj != 0) {
                log_message("Use "+string(ds_map_find_value(inventoryNames, obj)));
                ds_list_delete(inventory,h+5*v);
            }
        }
    }
}
if(obj_cursor.x == x &amp;&amp; obj_cursor.y == y){
    reset_cursor();
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// draw slots
cd = 0;
for(i=0;i&lt;=5;i++){
    v = 0;
    for(j=0;j&lt;2;j++) {
        
        draw_sprite(spr_inventorySlot,0,384+cd, 0+v);
        d = ds_list_find_value(inventory, (i + j*5) );
        if(d!=0){
            draw_sprite(d, 0, 384+cd, 0+v);
        }
        v += 32;
    }
    cd += 32;
}
for(q=0; q &lt; ds_list_size(inventory); q++) {
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite(sprite_index, image_index, x, y);

draw_vertical_movement(draw_movement, VERTICAL_MOVE);
draw_horzontal_movement(draw_movement, HORIZONTAL_MOVE);

draw_attack_indicator("Centaur");


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="77">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(draw_movement) {
    draw_movement = false;
    valid_moves = ds_map_create(); // GARBAGE COLLECTION trolololol
}else if(!draw_movement &amp;&amp; !is_moving() &amp;&amp; !being_attaked()) {
    draw_movement = true;
    draw_attack = false;
    calculate_valid_moves();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="65">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(draw_attack) {
    draw_attack = false;
    valid_attacks = ds_map_create(); // GARBAGE COLLECTION trolololol
}else {
    draw_attack = true;
    draw_movement = false;
    calculate_valid_attacks();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
